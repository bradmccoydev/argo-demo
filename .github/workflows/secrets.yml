name: Deploy Secrets

on:
  push:
    paths:
    - 'secrets/**'
  pull_request:
    branches:
      - main-disable

jobs:
  setup-build-publish-deploy:
    name: Deploy Secrets
    runs-on: ubuntu-latest
    environment: demo
    env:
      CLIENT_ENVIRONMENT: demo
      K8S_CLUSTER: tf-ause-demo
      RESOURCE_GROUP_NAME: tf-demo
      KUBECTL_VERSION: 1.22.4
      MICROSOFT_CLIENT_SECRET: ${{ secrets.MICROSOFT_CLIENT_SECRET }}
      ARGO_SECRET_KEY: ${{ secrets.ARGO_SECRET_KEY }}
      ARGO_ADMIN_PASSWORD: ${{ secrets.ARGO_ADMIN_PASSWORD }}
      AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY  }}
      TLS_CRT: ${{ secrets.TLS_CRT }}
      TLS_KEY: ${{ secrets.TLS_KEY  }}
      LINKERD_BASIC_AUTH: ${{ secrets.LINKERD_BASIC_AUTH  }} 
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Setup EKS
      run: |
        $( aws eks --region us-west-2 update-kubeconfig --name demo-us-west-2-devops )

    # - name: Set AKS Context
    #   uses: azure/aks-set-context@v1
    #   with:
    #     creds: '${{ secrets.AZURE_CREDENTIALS }}'
    #     cluster-name: ${{ env.K8S_CLUSTER }}
    #     resource-group: ${{ env.RESOURCE_GROUP_NAME }}

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: us-west-2

    - name: Set up Kubectl
      run: |-
        curl -sfLo kubectl "https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl"
        chmod a+x ./kubectl
    
    - name: Set up Kubeseal
      run: |-
        wget https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.16.0/kubeseal-linux-amd64 -O kubeseal
        sudo install -m 755 kubeseal /usr/local/bin/kubeseal
        kubeseal --version

    - name: Substitute Environment Variables
      run: |-
        find "secrets/" -name "*.tmpl" -exec bash -c 'envsubst < $1 > ${1%.tmpl}' _ {} \;      

    - name: Install Secrets
      run: |-
        git config --global user.email "bot@bradmccoy.io"
        git config --global user.name "GitHub Actions"
        kubeseal <secrets/aws-dns-creds.yaml >kube-infra/kustomize/dns-infra/external-dns-aws/overlays/demo/aws-dns-creds-sealed.yaml --format yaml --controller-namespace security --controller-name sealed-secrets
        kubeseal <secrets/aws-dns-creds-ci.yaml >kube-infra/kustomize/dns-infra/external-dns-aws/overlays/demo/aws-dns-creds-ci-sealed.yaml --format yaml --controller-namespace security --controller-name sealed-secrets
        kubectl apply -f kube-infra/kustomize/dns-infra/external-dns-aws/overlays/demo/aws-dns-creds-sealed.yaml
        kubectl apply -f kube-infra/kustomize/dns-infra/external-dns-aws/overlays/demo/aws-dns-creds-ci-sealed.yaml
        kubeseal <secrets/trust-anchor.yaml >kube-infra/kustomize/service-mesh/linkerd/overlays/demo/trust-anchor-sealed.yaml --format yaml --controller-namespace security --controller-name sealed-secrets
        kubeseal <secrets/webhook-issuer-tls.yaml >kube-infra/kustomize/service-mesh/linkerd/overlays/demo/webhook-issuer-tls-sealed.yaml --format yaml --controller-namespace security --controller-name sealed-secrets
        kubeseal <secrets/tap-k8s-tls.yaml >kube-infra/kustomize/service-mesh/linkerd/overlays/demo/tap-k8s-tls-sealed.yaml --format yaml --controller-namespace security --controller-name sealed-secrets
        kubeseal <secrets/tap-injector-k8s-tls.yaml >kube-infra/kustomize/service-mesh/linkerd/overlays/demo/tap-injector-k8s-tls-sealed.yaml --format yaml --controller-namespace security --controller-name sealed-secrets
        kubeseal <secrets/linkerd-viz-ingress-auth.yaml >kube-infra/kustomize/service-mesh/linkerd/overlays/demo/linkerd-viz-ingress-auth-sealed.yaml --format yaml --controller-namespace security --controller-name sealed-secrets
        git add kube-infra/kustomize/.
        # cd secrets
        # for secret in *.yaml
        # do
        #   sealedSecretName="${secret/.yaml/-sealed.yaml}"
        #   folderLine=$(grep 'folder: ' $secret)
        #   folder="${folderLine/folder: /}"
        #   subFolderLine=$(grep 'subFolder: ' $secret)
        #   subFolder="${subFolderLine/subFolder: /}"
        #   environmentLine=$(grep 'environment: ' $secret)
        #   environment="${environmentLine/environment: /}"
        #   outputPath="../kube-infra/kustomize/$folder/$subFolder/overlays/$environment/$sealedSecretName"
        #  kubeseal <$secret >$outputPath --format yaml --controller-namespace security
        #done
        #cd ..
        git commit -m "ðŸ¤– update sealed secrets"
        git push
        rm -R secrets
